package client;

import javafx.fxml.FXML;

import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import model.Datos;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

import javax.swing.JOptionPane;

import javafx.event.ActionEvent;

public class menuController {
	@FXML
	private Button buttonSalir;
	@FXML
	private TextField id_jugador;
	@FXML
	private TextField intentos;
	@FXML
	private TextField numAdivinar;
	@FXML
	private Button buttonEnviar;
	@FXML
	private TextField textfieldRespuesta;

	private static final int PORT = 9876;
	
	private Socket cliente;
	private ObjectInputStream ois;
	private ObjectOutputStream oos;
	private Datos datos;
	
	@FXML
    public void initialize() {
		
    }
	
	// Event Listener on Button[#buttonSalir].onAction
	@FXML
	public void clickSalir(ActionEvent event) {
		// TODO Autogenerated
		System.exit(0);
	}
	// Event Listener on Button[#buttonEnviar].onAction
	@FXML
	public void clickEnviar(ActionEvent event) {
		// TODO Autogenerated
		if(!isNumber(numAdivinar.getText())) return;
		if(!datos.isJuega()) return;
		try {
			
			datos.setCadena(numAdivinar.getText());
            oos = new ObjectOutputStream(cliente.getOutputStream());
            oos.writeObject(datos);

            ois = new ObjectInputStream(cliente.getInputStream());
            datos = (Datos) ois.readObject();
            
            textfieldRespuesta.setText(datos.getCadena());
            intentos.setText(""+datos.getIntentos());
            buttonEnviar.setDisable(!datos.isJuega());
            

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "(Cliente) La conexion se ha cerrado");
        }
	}
	
	
	@FXML
	public void clickConectar(ActionEvent event) {
		// TODO Autogenerated
		System.out.println("(Cliente) boton conectar pulsado");
		try {
            cliente = new Socket("localhost", PORT);
            
            ois = new ObjectInputStream(cliente.getInputStream());
            datos = (Datos) ois.readObject();
            
            textfieldRespuesta.setText(datos.getCadena());
            intentos.setText(""+datos.getIntentos());
            id_jugador.setText(""+datos.getIdentificador());
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "(Cliente) No se ha podido conectar con el servidor");
            e.printStackTrace();
            System.exit(1);
        }
	}
	
	private boolean isNumber(String cadena) {
		
		try {
			int num = Integer.parseInt(cadena);
			return true;
		} catch (Exception e) {
			// TODO: handle exception
			return false;
		}
		
	}
}
